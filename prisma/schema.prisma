// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  clerkUserId String   @unique
  email       String   @unique
  name        String?
  imageUrl    String?
  company     String ?
  role        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Rough Rough[]
}

model Lot {
  id          Int      @id @default(autoincrement())
  lotName     String @ unique
  type        String
  totalStones Int
  totalCts    Float
  source      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  origin      String
  notes       String?
  rough       Rough  []
}
  
model Rough {
  id               Int       @id @default(autoincrement())
  resourceNumber   String    @unique
  lotNumber        String
  roughWeight      Float
  roughColor       String
  plusMinusRColor   String?
  roughClarity     String
  plusMinusRClarity   String?
  machineColor     String
  machineClarity   String?
  roughDescription String
  fluor            String
  stones           String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  userId           String
  user             User      @relation(fields: [userId], references: [clerkUserId])
  options          Option[] 
  diamonds         Diamond[]
  lot              Lot      @relation(fields: [lotNumber], references: [lotName]) 
}

model Option {
  id             Int    @id @default(autoincrement())
  resourceNumber String
  ABC            String
  optionNumber   Int ?
  estWeight      Float @default(0.50)
  estProgram     String
  notes          String ?
  estShape       String
  estColor       String
  plusMinusRColor String?
  estClarity     String
  plusMinusRClarity String?
  estFluor       String
  estPrice       Float
  estList        Float
  totalEstList   Float @default(1000)
  estDiscount    Float
  selected       Boolean
  isPublic       Boolean @default(true)
  company        String ?
  diamonds       Diamond[]
  roughResourceNumber String
  rough          Rough   @relation(fields: [roughResourceNumber], references: [resourceNumber])
}

model Diamond {
  id               Int      @id @default(autoincrement())
  optionId         Int
  option           Option   @relation(fields: [optionId], references: [id])
  resourceNumber   String @unique
  roughResourceNumber String
  rough             Rough   @relation(fields: [roughResourceNumber], references: [resourceNumber])
  estTotalPrice         Float
  actTotalList          Float 
  estimatedWeight  Float
  estimatedColor   String
  estimatedClarity String
  estimatedProgram String
  estDiscount      Float
  location         String
  isPolished       Boolean 
  inventory        String
  giaNumber        String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  company          String ?

}

model RBRap {
  id Int @id @default(autoincrement())
  shape_color_clarity_size String @unique
  list Float
  listDate DateTime

}
model PSRap {
  id Int @id @default(autoincrement())
  shape_color_clarity_size String @unique
  list Float
  listDate DateTime

}